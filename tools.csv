tool_name,category,description,arguments,flag
manage_users,User Management,"Creates, updates, or deletes a user account.","table_name='users', action='create/update/delete', payload={user_id: str, email: str, full_name: str, password: str, global_role: user_role, account_id: str}",Setter
manage_groups,Group Management,"Creates, updates, or deletes a user group.","table_name='groups', action='create/update/delete', payload={group_id: str, group_name: str}",Setter
manage_group_memberships,Group Management,Adds or removes users from a group.,"table_name='user_groups', action='add/remove', payload={user_id: str, group_id: str}",Setter
get_user,User Management,Retrieves a user record by ID or email.,"table_name='users', action='get', payload={user_id: str, email: str}",Getter
get_group,Group Management,Retrieves a group record by ID or name.,"table_name='groups', action='get', payload={group_id: str, group_name: str}",Getter
manage_spaces,Space Management,"Creates, updates, or deletes a space.","table_name='spaces', action='create/update/delete', payload={space_id: str, space_key: str, space_name: str, space_purpose: str, is_deleted: bool, created_by_user_id: str}",Setter
get_space,Space Management,Retrieves a space record by its key or ID.,"table_name='spaces', action='get', payload={space_key: str, space_id: str}",Getter
manage_space_memberships,Space Management,Adds or removes a user from a space.,"table_name='space_memberships', action='add/remove', payload={user_id: str, space_id: str, role: user_role}",Setter
manage_space_features,Space Management,Manages which features are enabled for a space.,"table_name='space_features', action='manage', payload={space_id: str, feature_type: space_feature_type, is_enabled: bool}",Setter
manage_pages,Page Management,"Creates, updates, or deletes a page.","table_name='pages', action='create/update/delete', payload={page_id: str, space_id: str, parent_page_id: str, title: str, content_format: content_format, is_trashed: bool}",Setter
get_page,Page Management,Retrieves a page record by its ID or title.,"table_name='pages', action='get', payload={page_id: str, title: str}",Getter
move_page,Page Management,Moves a page within or between spaces.,"table_name='pages', action='move', payload={page_id: str, new_space_id?: str, new_parent_page_id?: str, moved_by_user_id: str}",Setter
clone_page,Page Management,Duplicates a page or an entire page tree.,"table_name='pages', action='clone', payload={source_page_id: str, target_space_id: str, target_parent_page_id: str, include_children: bool,created_by_user_id:str, new_title:str}",Setter
manage_page_versions,Page Management,Restores a page to a previous version.,"table_name='page_versions', action='restore', payload={page_id: str, version_number: int}",Setter
get_page_versions,Page Management,Retrieves all versions for a given page.,"table_name='page_versions', action='get', payload={page_id: str}",Getter
manage_permissions,Permission Management,"	Grants, revokes (tracks who/when), or retrieves permissions.","table_name='permissions', action='grant/revoke/get', payload={space_id?: str, page_id?: str, user_id?: str, group_id?: str, permission_type?: permission_type, revoked_by_user_id?: str, include_inactive?: bool, page?: int, page_size?: int}",Setter
manage_comments,Collaboration,"Adds, updates, or deletes a comment on a page.","table_name='comments', action='add/update/delete', payload={comment_id: str, page_id: str, comment_text: str, author_user_id: str}",Setter
get_comments,Collaboration,Retrieves all comments for a page.,"table_name='comments', action='get', payload={page_id: str}",Getter
manage_labels,Content Management,Adds or removes labels from a page.,"table_name='page_labels', action='add/remove', payload={page_id: str, label_names: list}",Setter
get_labels,Content Management,Retrieves all labels for a page.,"table_name='page_labels', action='get', payload={page_id: str}",Getter
manage_attachments,Content Management,Adds or removes an attachment from a page.,"table_name='attachments', action='add/remove', payload={page_id: str, file_name: str, file_path: str, uploaded_by_user_id: str}",Setter
get_attachments,Content Management,Retrieves all attachments for a page.,"table_name='attachments', action='get', payload={page_id: str}",Getter
manage_templates,Template Management,"Creates, updates, or deletes a template.","table_name='templates', action='create/update/delete', payload={template_id: str, template_name: str, template_content: str, is_blueprint: bool, space_id: str}",Setter
use_template,Template Management,Creates a new space or page using a template.,"table_name='templates', action='use', payload={template_id: str, space_id: str, page_title: str}",Setter
manage_watchers,Watcher Management,Adds or removes users/groups as watchers for a page or space.,"table_name='watchers', action='add/remove', payload={user_id: str, group_id: str, space_id: str, page_id: str}",Setter
get_watchers,Watcher Management,Retrieves all watchers for a space or page.,"table_name='watchers', action='get', payload={space_id: str, page_id: str}",Getter
manage_exports,Export Management,"Creates a space export job, imports a space from a file, or retrieves export job status.","table_name='export_jobs', action='create/import/get', payload={space_id?: str, format?: export_format, file?: file, conflict_resolution_strategy?: str, job_id?: str}",Setter
record_audit_log,Audit Management,Records an immutable audit log entry.,"table_name='audit_logs', action='record', payload={actor_user_id: str, action_type: audit_action_type, target_entity_type: str, target_entity_id: str, details: JSON}",Setter
get_audit_log,Audit Management,Retrieves audit logs based on filters.,"table_name='audit_logs', action='get', payload={actor_user_id: str, action_type: audit_action_type, start_date: datetime, end_date: datetime}",Getter
record_config_change,Config History,Records a change to a space's configuration.,"table_name='space_config_history', action='record', payload={space_id: str, changed_by_user_id: str, old_config: JSON, new_config: JSON}",Setter
get_config_history,Config History,Retrieves the configuration history for a space.,"table_name='space_config_history', action='get', payload={space_id: str}",Getter
create_approval_request,Approval Management,Create an approval request,"table_name='approval_requests', action='create', payload={target_entity_type: str, target_entity_id: str, requested_by_user_id: str, reason?: str, due_at?: datetime, metadata?: json, steps?: list}",Setter
decide_approval_step,Approval Management,Records a decision for an approval step and updates overall status.,"table_name='approval_decisions', action='update', payload={step_id: str, approver_user_id: str, decision: decision_type, comment?: str}",Setter
send_notification,Notification Management,Sends a system or email notification to a user,"table_name='notifications', action='create', payload={recipient_user_id: str, event_type: str, message: str, related_entity_type?: str, related_entity_id?: str, channel?: notification_channel, sender_user_id?: str, metadata?: json}",Setter
get_notifications,Notification Management,Retrieves notifications for a specific user with filters.,"table_name='notifications', action='get', payload={user_id: str, status?: notification_status, event_type?: str, page?: int, page_size?: int}",Getter